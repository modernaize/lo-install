version: '2.1'
services:
  license:
    image: liveobjects/license-service:${LIC_VERSION}
    container_name: license-service
    ports:
      - "3001:3001"
      - "9992:9991"
    env_file:
      - ./.env
    restart: always
    volumes:
      - ./license:/home/node/app/license/lo
    depends_on:
      db:
        condition: service_healthy
  db:
    image: liveobjects/postgres:${POSTGRES_VERSION}
    container_name: postgre
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U liveobjects"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - ./.env
    volumes:
      - ${DATA}/postgresql/data:/var/lib/postgresql/data
    restart: always
  ui:
    image: liveobjects/ui:${UI_VERSION}
    ports:
      - "443:3000"
    environment:
      - SERVICE_HOST=servicebackend
      - SERVICE_PORT=8000
      - LEARN_HOST=servicelearn
      - LEARN_PORT=5000
      - LICENSE_HOST=license
      - LICENSE_PORT=3001
      - NODE_ENV=production
      - TLS_CERT_PROVIDED=true
    volumes:
      - ./keys/tls:/home/node/app/keys/tls
      - ./logs:/home/node/app/logs
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:3000/live"]
      interval: 10s
      timeout: 5s
      retries: 3
  servicebackend:
    image: liveobjects/service:${SERVICE_VERSION}
    depends_on:
      - db
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    environment:
      - DB_HOST=db
      - LEARN_HOST=servicelearn
      - LEARN_PORT=5000
    volumes:
      - ./logs:/mnt/logs
      - ./keys:/mnt/keys
      - ./data/uploads:/mnt/uploads
      - ./data/data:/mnt/data
    restart: always
  servicelearn:
    image: liveobjects/learn:${ML_VERSION}
    container_name: learn
    command: gunicorn --workers=2  --worker-tmp-dir /dev/shm -c gunicorn_config.py --bind 0.0.0.0:5000 wsgi:APP
    depends_on:
      - db
    ports:
      - "5000:5000"
    env_file:
      - ./.env
    environment:
      - FLASK_APP=server.py
      - DB_HOST=db
      - DB_PORT=5432
      - FLASK_ENV=production
    volumes:
      - ./data/uns_model:/tmp
      - ./data/uns_model/uploads:/tmp/uploads
      - ./data/procmine:/mnt/procmine
      - ./logs:/mnt/logs
    restart: always
