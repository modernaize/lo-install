version: '3.1'
services:
  db:
    image: liveobjects/postgres:${POSTGRES_VERSION}
    container_name: db
    ports:
      - "5432:5432"
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U liveobjects"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ${PGDATA_DIR}/pgdata:/var/lib/postgresql/data
    restart: always

  servicebackend:
    image: liveobjects/service:${SERVICE_VERSION}
    container_name: service
    depends_on:
      - db
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    volumes:
      - ${TLSKEYS_DIR}/keys/tls:/mnt/keys
      - ${LOGS_DIR}/logs:/mnt/logs      
      - ${LODATA_DIR}/data/uploads:/mnt/uploads
      - ${LODATA_DIR}/data/data:/mnt/data
    restart: always

  servicelearn:
    image: liveobjects/learn:${ML_VERSION}
    container_name: learn
    command: gunicorn --workers=2  --worker-tmp-dir /dev/shm -c gunicorn_config.py --bind 0.0.0.0:5000 wsgi:APP
    depends_on:
      - db
    ports:
      - "5000:5000"
    env_file:
      - ./.env
    volumes:
      - ${LODATA_DIR}/data/uns_model:/tmp
      - ${LODATA_DIR}/data/uns_model/uploads:/tmp/uploads
      - ${LODATA_DIR}/data/procmine:/mnt/procmine
      - ${LOGS_DIR}/logs:/mnt/logs
    restart: always

  ui:
    image: liveobjects/ui:${UI_VERSION}
    container_name: ui
    ports:
      - "3000:3000"
      - "9991:9991"
    env_file:
      - ./.env
    volumes:
      - ${TLSKEYS_DIR}/keys/tls:/home/node/app/keys/tls
      - ${LOGS_DIR}/logs/ui:/home/node/app/logs
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:3000/live"]
      interval: 10s
      timeout: 5s
      retries: 3

  license:
    image: liveobjects/lo-license-service:${LIC_VERSION}
    container_name: license
    ports:
      - "3001:3000"
      - "9992:9991"
    env_file:
      - ./.env
    restart: always
    # volumes:
    #  - ${LICENSE_DIR}/license:/home/node/app/license/lo
    depends_on:
      - db

  scenario:
    image: liveobjects/lo-ui-scenario:${UI_SCENARIO_VERSION}
    container_name: scenario
    ports:
      - "3002:3000"
    env_file:
      - ./.env
    environment:
      - TLS_CERT_PROVIDED=false
    volumes:
      - ${LOGS_DIR}/logs/scenario:/home/node/app/logs
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:3002/live"]
      interval: 10s
      timeout: 5s
      retries: 3

  dyk:
    image: liveobjects/lo-ui-dyk:${UI_DYK_VERSION}
    container_name: dyk
    env_file:
      - ./.env
    ports:
      - "3003:3000"
    volumes:
      - ${LOGS_DIR}/logs/dyk:/home/node/app/logs
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:3003/live"]
      interval: 10s
      timeout: 5s
      retries: 3

  uidashboards:
    image: liveobjects/lo-ui-dashboards:${UI_DASHBOARDS_VERSION}
    container_name: dashboard
    depends_on:
      - servicebackend
    ports:
      - "3005:3000"
    env_file:
      - ./.env
    volumes:
      - ${LOGS_DIR}/logs/uidashboards:/home/node/app/logs
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:3005/live"]
      interval: 10s
      timeout: 5s
      retries: 3

  wdc:
    image: liveobjects/lo-tableau-wdc:${UI_WDC_VERSION}
    container_name: wdc
    env_file:
      - ./.env
    environment:
      - SERVICE_PROTOCOL=${SERVICE_PROTOCOL}
      - SERVICE_HOST=${DEPLOY_URL}
      - SERVICE_PORT=${SERVICE_PORT}
    ports:
      - "3006:3000"
    restart: always

  businessgrammar:
    image: liveobjects/lo-ui-business-grammar:${UI_BUSINESS_GRAMMAR_VERSION}
    container_name: businessgrammar
    env_file:
      - ./.env
    ports:
      - "3007:3000"
    volumes:
      - ${LOGS_DIR}/logs/businessgrammar:/home/node/app/logs
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:3007/live"]
      interval: 10s
      timeout: 5s
      retries: 3

  extensions:
    image: liveobjects/lo-ui-extensions:${UI_EXTENSIONS_VERSION}
    container_name: extension 
    env_file:
      - ./.env
    ports:
      - "3008:3000"
    volumes:
      - ${LOGS_DIR}/logs/extensions:/home/node/app/logs
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:3008/live"]
      interval: 10s
      timeout: 5s
      retries: 3

