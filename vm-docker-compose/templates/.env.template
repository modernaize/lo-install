# Version
VERSION=2020.3.0

# Registry Repository
REPOSITORY=liveobjects

# http || https
# HTTP if DEPLOYMENT = Ingress
PROTOCOL=${PROTOCOL}

# http || https - Only relevant when u have an NGINX as a reverse proy
PROTOCOL_INGRESS=${PROTOCOL_INGRESS}

# ip, dns, ingress
DEPLOYMENT=${DEPLOYMENT} 

# DNS Name or IP address
# Blank if you are running on localhosts
DEPLOY_URL=${DEPLOY_URL}
DEPLOYMENT_PORT=443
DEPLOYMENT_DOMAIN_NAME=172.31.35.124

### Service
SERVICE_PROTOCOL=http
LEARN_PROTOCOL=http
LICENSE_PROTOCOL=http
AUTOJOIN_PROTOCOL=http

### iFrame Scenario extension
# Only DEPLOYMENT <> ingress
UI_SCENARIO_PORT=3002
UI_BUSINESS_GRAMMAR_PORT=3007
UI_EXTENISION_PORT=3008
UI_DASHBOARDS_PORT=3005

## Container Version
LIC_VERSION=P-v2020.3.0
POSTGRES_VERSION=P-v2020.3.0
UI_VERSION=P-v2020.3.0
SERVICE_VERSION=P-v2020.3.0
ML_VERSION=P-v2020.3.0
AUTOJOIN_VERSION=P-v2020.3.0

UI_DASHBOARDS_VERSION=P-v2020.3.0
UI_WDC_VERSION=P-v2020.3.0
UI_SCENARIO_VERSION=P-v2020.3.0
UI_BUSINESS_GRAMMAR_VERSION=P-v2020.3.0
UI_DYK_VERSION=P-v2020.3.0
UI_EXTENSIONS_VERSION=P-v2020.3.0
UI_DOCUMENTATION_VERSION=P-v2020.3.0
UI_DISCOVERY_AUTOJOIN_VERSION=P-v2020.3.0

## Global container connectivity
SERVICE_HOST=servicebackend
SERVICE_PORT=8000
LEARN_HOST=servicelearn
LEARN_PORT=5000
LICENSE_HOST=license
LICENSE_PORT=3000
DB_HOST=db
DB_PORT=5432
AUTOJOIN_HOST=serviceautojoin
AUTOJOIN_PORT=5002

##
RESET_EMAIL_SERVER=smtp.gmail.com
RESET_EMAIL_SERVER_PORT=25
RESET_EMAIL=liveobject.test@gmail.com
RESET_EMAIL_PW=Ggbkhsymz99

## POSTGRES
POSTGRES_PASSWORD=liveobjectspass

## SERVICE
# This is for upgrade only. defaul is false
FLYWAY_ENABLE=false
FLYWAY_BASELINE_ON_MIGRATE=false
# version to upgrade from
UPGRADE_VERSION=0.0.0

## Path
LODATA_DIR=.
PGDATA_DIR=.
LOGS_DIR=.
TLSKEYS_DIR=.
LICENSE_DIR=.

NODE_ENV=production

## Initial PASSWORD
# ADMIN_INITIAL_PASSWORD=abc
# ROOT_INITIAL_PASSWORD=abc
# SYSTEM_ADMIN_INITIAL_PASSWORD=abc
# LICENSE_ADMIN_INITIAL_PASSWORD=abc

### OAuth2 configuration
# The callback URL for OAuth2 redirects will be composed with the values of PROTOCOL and DEPLOY_URL
# This role will be given to new users created via the Oauth2 login (default: ROLE_ADMIN)

DEFAULT_OAUTH2_ROLE=ROLE_USER
# Filter for the allowed email addresses that can login via the Oauth2 login (default: liveobjects.ai, otherdomain.com)
ALLOWED_OAUTH2_EMAIL_DOMAIN=liveobjects.ai, google.com

# Supported Oauth2 services accessKeys and secretKeys
# GOOGLE_CLIENT_ID=
# GOOGLE_CLIENT_SECRET=
# GITHUB_CLIENT_ID=
# GITHUB_CLIENT_SECRET=

## ML 
FLASK_APP=server.py
FLASK_ENV=production

### Optional components
## JAEGER 
JAEGER_HOST=localhost
JAEGER_PORT=6832

## System Monitoring

## CADDY

ADMIN_USER=admin
ADMIN_PASSWORD=admin

## POSTGRESQL-EXPORTER

DATA_SOURCE_URI=db:5432/postgres?sslmode=disable
DATA_SOURCE_USER=liveobjects
DATA_SOURCE_PASS=liveobjectspass
PG_EXPORTER_AUTO_DISCOVER_DATABASES=true

## GRAFANA

GF_SECURITY_ADMIN_USER=admin
GF_SECURITY_ADMIN_PASSWORD=admin
GF_USERS_ALLOW_SIGN_UP=false

## PORTAINER
PGDATA_DIR=.
PORTAINER_DATA=./portainer_data