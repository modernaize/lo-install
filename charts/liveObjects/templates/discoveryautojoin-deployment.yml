
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.deployment.discoveryautojoin.metadata.name }}
  labels:
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/appVersion: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: secret
    app.kubernetes.io/helm-application: {{ .Release.Name }}
    app.kubernetes.io/namespace: {{ .Release.Namespace }}
    app.kubernetes.io/track: {{ .Values.global.labels.track | quote }}
spec:
  replicas: {{ .Values.deployment.discoveryautojoin.spec.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-discoveryautojoin
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-discoveryautojoin
    spec:
      volumes:
      - name: tls-keys-volume
        configMap:
          {{- if .Values.tls.base64EncodedPrivateKey }}
          name: {{ .Release.Name }}-lo-custom-tls
          {{- else }}
          name: {{ .Release.Name }}-tls-keys
          {{- end }}
      containers:
      - name: discoveryautojoin
        image: {{ .Values.deployment.discoveryautojoin.container.registry }}:{{ .Values.deployment.discoveryautojoin.container.tag }}
        imagePullPolicy: {{ .Values.deployment.discoveryautojoin.container.imagePullPolicy }}
        resources:
          requests:
            cpu: {{ .Values.deployment.discoveryautojoin.container.resources.requests.cpu }}
            memory: {{ .Values.deployment.discoveryautojoin.container.resources.requests.memory }}
        ports:
        - containerPort: {{ .Values.deployment.discoveryautojoin.container.ports.containerPort }}
        env:
        {{- if .Values.ingress.tls.host }}
        - name: DEPLOY_URL
          value: {{ .Values.ingress.tls.host }}
        - name: DEPLOYMENT
          value: "ingress"
        {{- end }}
        - name: SERVICE_HOST
          value: "{{ .Release.Name }}-{{ .Values.services.backend.metadata.name }}"
        - name: SERVICE_PORT
          value: "{{ .Values.services.backend.spec.ports.targetPort }}"
        - name: NODE_ENV
          value: "production"
        # To Do for SSL disabled
        - name:  TLS_CERT_PROVIDED
        ## [none] SSL - disabled
        ## [lets-encrypt] The Let's Encrypt certificate is generated
        ## [self-signed] Custom self-signed certificates will be installed on Live Objects instance
        {{- if eq (lower .Values.lo.sslConfiguration) "self-signed" }}
          value: "true"
        {{-  else }}
          value: "false"
        {{- end }}
        volumeMounts:
        - name: tls-keys-volume # configMaps
          mountPath: /home/node/app/keys/tls
      imagePullSecrets:
      - name: {{ .Release.Name }}-{{ .Values.secrets.registry.imagePullSecrets }}



