{{- if .Values.ingress.tls.host }}
apiVersion: networking.k8s.io/v1beta1 # for versions before 1.14 use extensions/v1beta1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-frontend-ingress
  annotations:
  {{- if eq (lower .Values.lo.sslConfiguration) "lets-encrypt" }}
    cert-manager.io/cluster-issuer: {{ .Release.Namespace }}-{{ .Values.certManager.ca.name }}-{{ .Values.certManager.letsencrypt.env }}
  {{- end }}
    kubernetes.io/ingress.class: nginx
  labels:
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/appVersion: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: secret
    app.kubernetes.io/helm-application: {{ .Release.Name }}
    app.kubernetes.io/namespace: {{ .Release.Namespace }}
    app.kubernetes.io/track: {{ .Values.global.labels.track | quote }}
spec:
  {{- if eq (lower .Values.lo.sslConfiguration) "lets-encrypt" }}
  tls:
    - hosts:
      - {{ .Values.ingress.tls.host }}
      secretName: {{ .Release.Namespace }}-{{ .Values.certManager.tls.secretName }}
  {{- end }}
  rules:
    - host: {{ .Values.ingress.tls.host }}
      http:
        paths: 
          - path: /
            backend:
              serviceName: {{ .Release.Name }}-{{ .Values.services.frontend.metadata.name }}
              {{- if or (eq (lower .Values.lo.sslConfiguration ) "none") (eq (lower .Values.lo.sslConfiguration ) "lets-encrypt")  }}
              servicePort: {{ .Values.services.frontend.spec.ports.port }}
              {{- else }}
              servicePort: {{ .Values.services.frontend.spec.ports.tlsport }}
              {{- end }}

{{- end }}
